{"version":3,"sources":["components/Logo/Logo.png","components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/Signin/Signin.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","_ref","onRouteChange","isSignedIn","react_default","a","createElement","style","display","justifyContent","onClick","className","Logo","tilt_default","options","max","height","width","paddingTop","alt","src","LogoPic","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Rank","FaceRecognition","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Signin","htmlFor","name","value","href","Register","Clarifai","require","app","App","apiKey","particlesOptions","particles","number","density","enable","size","random","anim","speed","size_min","line_linked","move","direction","out_mode","interactivity","events","onhover","mode","onclick","modes","bubble","distance","duration","opacity","repulse","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","calculateFaceLocaton","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","error","console","log","route","_this$state","particles_default","params","components_Navigation_Navigation","src_components_Logo_Logo","components_Rank_Rank","components_ImageLinkForm_ImageLinkForm","components_FaceRecognition_FaceRecognition","components_Signin_Signin","components_Register_Register","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.360dda35.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.d9894458.png\";","import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n    if(isSignedIn) {\r\n        return (\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick={() => onRouteChange('signout')} className='f3 link dim black undeline pa3 pointer'>Sign Out</p>\r\n            </nav>\r\n        );\r\n    } else {\r\n        return (\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick={() => onRouteChange('signin')} className='f3 link dim black undeline pa3 pointer'>Sign In</p>\r\n                <p onClick={() => onRouteChange('register')} className='f3 link dim black undeline pa3 pointer'>Register</p>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\nimport LogoPic from './Logo.png';\r\n\r\nconst Logo   = () => {\r\n    return (\r\n        <div className='ma4 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 25 }} style={{ height: 150, width: 150 }} >\r\n            <div className=\"Tilt-inner pa3\">\r\n                <img style={{paddingTop: '7px'}} alt='logo' src={LogoPic} />\r\n            </div>\r\n            </Tilt>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n    return (\r\n        <div>\r\n            <p className='f3'>\r\n                {'This Web site will detect faces in your pictures. Give it a try.'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className='form center pa4 br3 shadow-5'>\r\n                    <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange} />\r\n                    <button \r\n                        className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\r\n                        onClick={onButtonSubmit} >Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n// import './ImageLinkForm.css';\r\n\r\nconst Rank = () => {\r\n    return (\r\n        <div>\r\n            <div className='white f3'>\r\n                {'Hello User, your current rank is...'}\r\n            </div>\r\n            <div className='white f1'>\r\n                {'#7'}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n    return (\r\n        <div className='center ma'>\r\n            <div className='absolute mt2'>\r\n                <img id='inputImage' alt='img' src={imageUrl} width='500px' height='auto'/>\r\n                <div className='bounding-box' style={{top:box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol }}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nconst Signin = ({ onRouteChange }) => {\r\n    return (\r\n        <article className=\"mw6 center br3 pa3 pa4-ns mv3 ba b--black-10 shadow-5\">\r\n            <main className=\"pa4 black-80\">\r\n                <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f1 fw6 ph0 center\">Sign In</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n                            </div>\r\n                        <label className=\"pa0 ma0 lh-copy f6 pointer\"><input type=\"checkbox\" /> Remember me</label>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                        <input \r\n                            onClick={() => onRouteChange('home')}\r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                            type=\"submit\" \r\n                            value=\"Sign in\" />\r\n                    </div>\r\n                    <div className=\"lh-copy mt3\">\r\n                        <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\r\n                        <a href=\"#0\" className=\"f6 link dim black db\">Forgot your password?</a>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\n\r\nconst Register = ({ onRouteChange }) => {\r\n    return (\r\n        <article className=\"mw6 center br3 pa3 pa4-ns mv3 ba b--black-10 shadow-5\">\r\n            <main className=\"pa4 black-80\">\r\n                <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f1 fw6 ph0 center\">Register</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Email</label>\r\n                                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\" />\r\n                            </div>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n                            </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                        <input \r\n                            onClick={() => onRouteChange('home')}\r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                            type=\"submit\" \r\n                            value=\"Register\" />\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport './App.css';\nimport Particles from 'react-particles-js';\nconst Clarifai = require('clarifai');\n\nconst app = new Clarifai.App({\n  apiKey: '5ad02d1b7a354a0785a130412e7671c8'\n });\n\nconst particlesOptions = {\n\t    \"particles\": {\n\t        \"number\": {\n\t            \"value\": 160,\n\t            \"density\": {\n\t                \"enable\": false\n\t            }\n\t        },\n\t        \"size\": {\n\t            \"value\": 3,\n\t            \"random\": true,\n\t            \"anim\": {\n\t                \"speed\": 4,\n\t                \"size_min\": 0.3\n\t            }\n\t        },\n\t        \"line_linked\": {\n\t            \"enable\": false\n\t        },\n\t        \"move\": {\n\t            \"random\": true,\n\t            \"speed\": 1,\n\t            \"direction\": \"top\",\n\t            \"out_mode\": \"out\"\n\t        }\n\t    },\n\t    \"interactivity\": {\n\t        \"events\": {\n\t            \"onhover\": {\n\t                \"enable\": true,\n\t                \"mode\": \"bubble\"\n\t            },\n\t            \"onclick\": {\n\t                \"enable\": true,\n\t                \"mode\": \"repulse\"\n\t            }\n\t        },\n\t        \"modes\": {\n\t            \"bubble\": {\n\t                \"distance\": 250,\n\t                \"duration\": 2,\n\t                \"size\": 0,\n\t                \"opacity\": 0\n\t            },\n\t            \"repulse\": {\n\t                \"distance\": 400,\n\t                \"duration\": 4\n\t            }\n\t        }\n\t    }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n    }\n  }\n\n  calculateFaceLocaton = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box });\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value });\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input })\n    app.models.predict(\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input)\n        .then(response => this.displayFaceBox( this.calculateFaceLocaton(response)))\n        .catch(error => console.log(error));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout'){\n        this.setState({ isSignedIn: false });\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: route });\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\"> \n        <Particles className='particles'\n          params={particlesOptions}\n        />\n       <Navigation isSignedIn={isSignedIn} onRouteChange={ this.onRouteChange } />\n       {route === 'home'\n            ?   <div>\n                    <Logo />\n                    <Rank />\n                    <ImageLinkForm \n                        onInputChange={this.onInputChange}\n                        onButtonSubmit={this.onButtonSubmit}/>\n                    <FaceRecognition box={box} imageUrl={imageUrl} />\n                </div>\n            :   (\n                route === 'signin'\n                ?   <Signin onRouteChange={this.onRouteChange}/>\n                :   <Register onRouteChange={this.onRouteChange}/>)\n       }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}