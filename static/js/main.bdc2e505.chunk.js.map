{"version":3,"sources":["components/Logo/Logo.png","components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","constants/constants.js","components/Signin/Signin.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","_ref","onRouteChange","isSignedIn","react_default","a","createElement","style","display","justifyContent","onClick","className","Logo","tilt_default","options","max","height","width","paddingTop","alt","src","LogoPic","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Rank","name","entries","concat","FaceRecognition","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","host","Signin","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","Content-Type","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","htmlFor","href","React","Component","Register","onNameChange","onSubmitRegister","particlesOptions","particles","number","density","enable","size","random","anim","speed","size_min","line_linked","move","direction","out_mode","interactivity","events","onhover","mode","onclick","modes","bubble","distance","duration","opacity","repulse","initialState","input","route","joined","App","data","calculateFaceLocaton","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","assign","catch","console","log","error","_this$state","particles_default","params","components_Navigation_Navigation","src_components_Logo_Logo","components_Rank_Rank","components_ImageLinkForm_ImageLinkForm","components_FaceRecognition_FaceRecognition","components_Signin_Signin","components_Register_Register","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bdc2e505.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.d9894458.png\";","import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n    if(isSignedIn) {\r\n        return (\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick={() => onRouteChange('signout')} className='f3 link dim black undeline pa3 pointer'>Sign Out</p>\r\n            </nav>\r\n        );\r\n    } else {\r\n        return (\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick={() => onRouteChange('signin')} className='f3 link dim black undeline pa3 pointer'>Sign In</p>\r\n                <p onClick={() => onRouteChange('register')} className='f3 link dim black undeline pa3 pointer'>Register</p>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\nimport LogoPic from './Logo.png';\r\n\r\nconst Logo   = () => {\r\n    return (\r\n        <div className='ma4 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 25 }} style={{ height: 150, width: 150 }} >\r\n            <div className=\"Tilt-inner pa3\">\r\n                <img style={{paddingTop: '7px'}} alt='logo' src={LogoPic} />\r\n            </div>\r\n            </Tilt>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n    return (\r\n        <div>\r\n            <p className='f3'>\r\n                {'This Web site will detect faces in your pictures. Give it a try.'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className='form center pa4 br3 shadow-5'>\r\n                    <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange} />\r\n                    <button \r\n                        className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\r\n                        onClick={onButtonSubmit} >Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n// import './ImageLinkForm.css';\r\n\r\nconst Rank = ({name, entries}) => {\r\n    return (\r\n        <div>\r\n            <div className='white f3'>\r\n                {`Hello ${name}, your current rank is...`}\r\n            </div>\r\n            <div className='white f1'>\r\n                {`#${entries}`}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n    return (\r\n        <div className='center ma'>\r\n            <div className='absolute mt2'>\r\n                <img id='inputImage' alt='img' src={imageUrl} width='500px' height='auto'/>\r\n                <div className='bounding-box' style={{top:box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol }}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FaceRecognition;","const host = 'https://immense-plateau-22026.herokuapp.com';\r\n// const host = 'http://localhost:3001';\r\n\r\nexport {host};","import React from 'react';\r\nimport {host} from '../../constants/constants';\r\n\r\nclass Signin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: '',\r\n        }\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({signInEmail: event.target.value});\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({signInPassword: event.target.value});\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch(`${host}/signin`, {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password: this.state.signInPassword\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(user => {\r\n                if(user.id){\r\n                  this.props.loadUser(user);\r\n                  this.props.onRouteChange('home');\r\n                }\r\n              })\r\n    }\r\n\r\n    render() {\r\n        const { onRouteChange } = this.props;\r\n        return (\r\n            <article className=\"mw6 center br3 pa3 pa4-ns mv3 ba b--black-10 shadow-5\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 center\">Sign In</legend>\r\n                                <div className=\"mt3\">\r\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                    <input \r\n                                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                        type=\"email\" \r\n                                        name=\"email-address\"  \r\n                                        id=\"email-address\"\r\n                                        onChange={this.onEmailChange}    \r\n                                     />\r\n                                </div>\r\n                                <div className=\"mv3\">\r\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                    <input \r\n                                        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                        type=\"password\" \r\n                                        name=\"password\"  \r\n                                        id=\"password\"\r\n                                        onChange={this.onPasswordChange}    \r\n                                     />\r\n                                </div>\r\n                            <label className=\"pa0 ma0 lh-copy f6 pointer\"><input type=\"checkbox\" /> Remember me</label>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input \r\n                                onClick={this.onSubmitSignIn}\r\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                                type=\"submit\" \r\n                                value=\"Sign in\" />\r\n                        </div>\r\n                        <div className=\"lh-copy mt3\">\r\n                            <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\r\n                            <a href=\"#0\" className=\"f6 link dim black db\">Forgot your password?</a>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\nimport {host} from '../../constants/constants';\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name: '',\r\n        }\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({email: event.target.value});\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({password: event.target.value});\r\n    }\r\n\r\n    onNameChange = (event) => {\r\n        this.setState({name: event.target.value});\r\n    }\r\n\r\n    onSubmitRegister = () => {\r\n        fetch(`${host}/register`, {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                name: this.state.name\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(user => {\r\n                if(user.id) {\r\n                    this.props.loadUser(user);\r\n                    this.props.onRouteChange('home');\r\n                }\r\n            })\r\n    }\r\n\r\n    \r\n    render(){\r\n        return (\r\n            <article className=\"mw6 center br3 pa3 pa4-ns mv3 ba b--black-10 shadow-5\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 center\">Register</legend>\r\n                                <div className=\"mt3\">\r\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                                    <input \r\n                                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                        type=\"text\" \r\n                                        name=\"name\"  \r\n                                        id=\"name\" \r\n                                        onChange={this.onNameChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"mt3\">\r\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                    <input \r\n                                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                        type=\"email\" \r\n                                        name=\"email-address\"  \r\n                                        id=\"email-address\" \r\n                                        onChange={this.onEmailChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"mv3\">\r\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                    <input \r\n                                        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                        type=\"password\" \r\n                                        name=\"password\"  \r\n                                        id=\"password\" \r\n                                        onChange={this.onPasswordChange}\r\n                                    />\r\n                                </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input \r\n                                onClick={this.onSubmitRegister}\r\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                                type=\"submit\" \r\n                                value=\"Register\" />\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport {host} from './constants/constants';\n\nconst particlesOptions = {\n\t    \"particles\": {\n\t        \"number\": {\n\t            \"value\": 160,\n\t            \"density\": {\n\t                \"enable\": false\n\t            }\n\t        },\n\t        \"size\": {\n\t            \"value\": 3,\n\t            \"random\": true,\n\t            \"anim\": {\n\t                \"speed\": 4,\n\t                \"size_min\": 0.3\n\t            }\n\t        },\n\t        \"line_linked\": {\n\t            \"enable\": false\n\t        },\n\t        \"move\": {\n\t            \"random\": true,\n\t            \"speed\": 1,\n\t            \"direction\": \"top\",\n\t            \"out_mode\": \"out\"\n\t        }\n\t    },\n\t    \"interactivity\": {\n\t        \"events\": {\n\t            \"onhover\": {\n\t                \"enable\": true,\n\t                \"mode\": \"bubble\"\n\t            },\n\t            \"onclick\": {\n\t                \"enable\": true,\n\t                \"mode\": \"repulse\"\n\t            }\n\t        },\n\t        \"modes\": {\n\t            \"bubble\": {\n\t                \"distance\": 250,\n\t                \"duration\": 2,\n\t                \"size\": 0,\n\t                \"opacity\": 0\n\t            },\n\t            \"repulse\": {\n\t                \"distance\": 400,\n\t                \"duration\": 4\n\t            }\n\t        }\n\t    }\n}\n\nconst initialState = {\n    input: '',\n    imageUrl: '',\n    box: {},\n    route: 'signin',\n    isSignedIn: false,\n    user: {\n      id: '',\n      name: '',\n      email: '',\n      entries: 0,\n      joined: ''\n    },\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n      this.setState( {\n          user: {\n            id: data.id,\n            name: data.name,\n            email: data.email,\n            entries: data.entries,\n            joined: data.joined\n          }\n      });\n  }\n\n  calculateFaceLocaton = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box });\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value });\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input })\n        fetch(`${host}/imageUrl`, {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n            input: this.state.input\n            })\n        })\n        .then(response => response.json())\n        .then(response => {\n            if(response) {\n                fetch(`${host}/image`, {\n                    method: 'put',\n                    headers: {'Content-Type': 'application/json'},\n                    body: JSON.stringify({\n                    id: this.state.user.id\n                    })\n                })\n                .then(response => response.json())\n                .then(count => {\n                    this.setState(Object.assign(this.state.user,{ entries:count }));\n                })\n                .catch(console.log)\n            }\n            this.displayFaceBox(this.calculateFaceLocaton(response))\n        })\n        .catch(error => console.log(error));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout'){\n        this.setState(initialState);\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: route });\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\"> \n        <Particles className='particles'\n          params={particlesOptions}\n        />\n       <Navigation isSignedIn={isSignedIn} onRouteChange={ this.onRouteChange } />\n       {route === 'home'\n            ?   <div>\n                    <Logo />\n                    <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n                    <ImageLinkForm \n                        onInputChange={this.onInputChange}\n                        onButtonSubmit={this.onButtonSubmit}/>\n                    <FaceRecognition box={box} imageUrl={imageUrl} />\n                </div>\n            :   (\n                route === 'signin'\n                ?   <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n                :   <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>)\n       }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}